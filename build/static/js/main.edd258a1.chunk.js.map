{"version":3,"sources":["components/Quotes.js","components/App.js","index.js"],"names":["Quotes","quote","author","Card","id","App","props","fetchaQuote","axios","get","then","res","setState","quotes","data","myQuote","Math","floor","random","handleClick","state","this","spinner","className","Spinner","color","bg","Button","href","target","type","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAiCeA,EA7BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OACb,eAACC,EAAA,EAAD,CAAMC,GAAG,YAAT,UACE,qBAAKA,GAAG,OAAR,SACE,kCAEGH,EAFH,SAMF,qBAAKG,GAAG,SAAR,SACE,6BAAKF,UCyEIG,E,kDAjFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,YAAc,WACZC,IACGC,IACC,0IAEDC,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEC,OAAQF,EAAIG,KAAKD,SACjC,EAAKD,SAAS,CACZG,QAASJ,EAAIG,KAAKD,OAAOG,KAAKC,MAAsB,IAAhBD,KAAKE,iBApB9B,EAyBnBC,YAAc,WAAO,IACXN,EAAW,EAAKO,MAAhBP,OACR,EAAKD,SAAS,CACZG,QAASF,EAAOG,KAAKC,MAAsB,IAAhBD,KAAKE,cA1BlC,EAAKE,MAAQ,CACXP,OAAQ,GACRE,QAAS,IAJM,E,gEASjBM,KAAKd,gB,+BAuBG,IACAQ,EAAYM,KAAKD,MAAjBL,QACAd,EAAkBc,EAAlBd,MAAOC,EAAWa,EAAXb,OACToB,EACJ,qBAAKC,UAAU,6CAAf,SACE,cAACC,EAAA,EAAD,CAASC,MAAM,cAGnB,OACE,sBAAKF,UAAU,YAAYG,GAAG,OAA9B,UACE,sBAAKH,UAAU,iCAAf,UACE,cAACI,EAAA,EAAD,CACEJ,UAAU,OACVE,MAAM,UACNG,KAAK,sCAHP,iCAOA,cAACD,EAAA,EAAD,CACEJ,UAAU,OACVE,MAAM,UACNG,KAAK,kDACLC,OAAO,SAJT,qBAUD5B,EACC,qCACE,qBAAKsB,UAAU,6CAAf,SACE,cAACI,EAAA,EAAD,CAAQG,KAAK,SAAS1B,GAAG,YAAY2B,QAASV,KAAKF,YAAnD,yBAIF,cAAC,EAAD,CACEA,YAAaE,KAAKF,YAClBlB,MAAOA,EACPC,OAAQA,OAIZoB,S,GA3EQU,IAAMC,W,YCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.edd258a1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nconst Quotes = ({ quote, author }) => (\n  <Card id=\"quote-box\">\n    <div id=\"text\">\n      <p>\n        &quot;\n        {quote}\n        &quot;\n      </p>\n    </div>\n    <div id=\"author\">\n      <h4>{author}</h4>\n    </div>\n    {/* <div className=\"buttons\">\n      <a\n        href={`https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${quote}\" ${author}`}\n        id=\"tweet-quote\"\n        title=\"Tweet this quote!\"\n      >\n        <i className=\"fa fa-twitter\" />\n      </a>\n    </div> */}\n  </Card>\n);\n\nQuotes.propTypes = {\n  quote: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n};\n\nexport default Quotes;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Spinner } from \"reactstrap\";\nimport Quotes from \"./Quotes\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: {},\n      myQuote: {},\n    };\n  }\n\n  componentDidMount() {\n    this.fetchaQuote();\n  }\n\n  fetchaQuote = () => {\n    axios\n      .get(\n        \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n      )\n      .then((res) => {\n        this.setState({ quotes: res.data.quotes });\n        this.setState({\n          myQuote: res.data.quotes[Math.floor(Math.random() * 102)],\n        });\n      });\n  };\n\n  handleClick = () => {\n    const { quotes } = this.state;\n    this.setState({\n      myQuote: quotes[Math.floor(Math.random() * 102)],\n    });\n  };\n\n  render() {\n    const { myQuote } = this.state;\n    const { quote, author } = myQuote;\n    const spinner = (\n      <div className=\"d-flex justify-content-center align-middle\">\n        <Spinner color=\"primary\" />\n      </div>\n    );\n    return (\n      <div className=\"container\" bg=\"dark\">\n        <div className=\"d-flex justify-content-between\">\n          <Button\n            className=\"my-3\"\n            color=\"success\"\n            href=\"https://flafi.hu/index.html#jscript\"\n          >\n            Back to the website\n          </Button>\n          <Button\n            className=\"my-3\"\n            color=\"primary\"\n            href=\"https://github.com/Flafi87/RandomQuoteGenerator\"\n            target=\"_blank\"\n          >\n            Repo\n          </Button>\n        </div>\n\n        {quote ? (\n          <>\n            <div className=\"d-flex justify-content-center align-middle\">\n              <Button type=\"button\" id=\"new-quote\" onClick={this.handleClick}>\n                NEW QUOTE\n              </Button>\n            </div>\n            <Quotes\n              handleClick={this.handleClick}\n              quote={quote}\n              author={author}\n            />\n          </>\n        ) : (\n          spinner\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}